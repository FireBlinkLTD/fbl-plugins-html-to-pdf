version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:lts

jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # install all app dependencies
      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # build it
      - run: yarn build

      # persist build
      - persist_to_workspace:
          root: ~/repo
          paths: .

      - run:
          name: Install Headless Chrome dependencies
          command: |
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget --fix-missing

      # run tests and generate coverage report
      - run: yarn test

      # generate coverage report
      - run: ./node_modules/.bin/nyc report --reporter=text-lcov > ./coverage.lcov

      # send test coverage
      - run: bash <(curl -s https://codecov.io/bash) -f ./coverage.lcov

      # test for outdated packages
      #- run: yarn outdated

      # lint code
      - run: yarn lint

      # test if plugin can be used with prod dependencies
      - run: yarn install --prod
      - run: yarn add fbl
      - run: yarn fbl -p ~/repo/dist/index.js ./test/assets/dummy.flow.yml

      # store artifacts
      - store_artifacts:
          path: ./coverage

      # store artifacts
      - store_artifacts:
          path: ./mochawesome-report

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

      - run:
          name: Publish package
          command: npm publish --access public


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9](\-(beta|alpha)\.[0-9]+){0,1}/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9](\-(beta|alpha)\.[0-9]+){0,1}/
            branches:
              ignore: /.*/
